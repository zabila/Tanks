@startuml
interface IDrawable {
  +draw(): void
}

interface IMovable {
  +position: Point
  +speed: int
  +move(): void
}

interface ITank {
  +direction: Direction
  +health: int
  +shoot(): void
}

interface IBullet {
  +damage: int
}

interface IWall {
  +isDestructible: bool
}

interface IBase {
}

class CTank {
  -direction: Direction
  -health: int
  -speed: int
  -position: Point
}

class CBullet {
  -damage: int
  -speed: int
  -position: Point
}

class CWall {
  -isDestructible: bool
  -position: Point
}

class CBase {
  -position: Point
}

class CTank {
}

class CBrickWall {
}

class CConcreteWall {
}

class CGameEngine {
  -currentLevel: int
  -playerTank: ITank
  -enemyTanks: list<ITank>
  -walls: list<IWall>
  -base: IBase
  +startGame(): void
  +endGame(): void
  +spawnEnemy(): void
}

class CLevelManager {
  -levels: list<Level>
  +loadLevel(level: int): void
  +nextLevel(): void
}

class CGameController {
  -gameManager: CGameEngine
  -levelManager: CLevelManager
  +startGame(): void
  +endGame(): void
  +movePlayer(direction: Direction): void
  +playerShoot(): void
}

class CLevelController {
  -levelManager: CLevelManager
  +loadLevel(level: int): void
  +nextLevel(): void
}

interface ITankFactory {
  +createTank(type: TankType): ITank
}

class CTankFactory implements ITankFactory {
  +createTank(type: TankType): ITank
}

interface IWallFactory {
  +createWall(type: WallType): IWall
}

class CBrickWallFactory implements IWallFactory {
  +createWall(type: WallType): IWall
}

class CConcreteWallFactory implements IWallFactory {
  +createWall(type: WallType): IWall
}

IDrawable <|.. IMovable
IDrawable <|.. ITank
IDrawable <|.. IBullet
IDrawable <|.. IWall
IDrawable <|.. IBase

IMovable <|.. ITank
IMovable <|.. IBullet

ITank <|.. CTank
IBullet <|.. CBullet
IWall <|.. CWall
IBase <|.. CBase

CWall <|-- CBrickWall
CWall <|-- CConcreteWall

CGameEngine ..> ITankFactory : uses
CGameEngine ..> IWallFactory : uses
CGameEngine ..> CLevelManager : uses
CGameEngine ..> CGameController : uses

CGameController ..> CLevelController : uses

ITankFactory <|.. CTankFactory

IWallFactory <|.. CBrickWallFactory
IWallFactory <|.. CConcreteWallFactory
@enduml